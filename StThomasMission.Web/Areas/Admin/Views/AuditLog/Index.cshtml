@model StThomasMission.Web.Areas.Admin.Models.AuditLogIndexViewModel
@{
    ViewData["Title"] = "Audit Logs";
}

<div class="card">
    <div class="card-header">
        <h3 class="mb-0">Audit Logs</h3>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" class="mb-4">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Filter.SearchString" class="form-label"></label>
                        <input asp-for="Filter.SearchString" class="form-control" placeholder="Search by action, entity, or details" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Filter.EntityName" class="form-label"></label>
                        <input asp-for="Filter.EntityName" class="form-control" placeholder="Filter by entity name" />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="Filter.StartDate" class="form-label"></label>
                        <input asp-for="Filter.StartDate" type="date" class="form-control" />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="Filter.EndDate" class="form-label"></label>
                        <input asp-for="Filter.EndDate" type="date" class="form-control" />
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-modern w-100">Filter</button>
                </div>
            </div>
        </form>

        @if (Model.Logs.Count == 0)
        {
            <p>No audit logs found.</p>
        }
        else
        {
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-pageNumber="@Model.Logs.PageIndex" asp-route-pageSize="@Model.Logs.PageSize" asp-route-searchString="@Model.Filter.SearchString" asp-route-entityName="@Model.Filter.EntityName" asp-route-startDate="@(Model.Filter.StartDate?.ToString("yyyy-MM-dd"))" asp-route-endDate="@(Model.Filter.EndDate?.ToString("yyyy-MM-dd"))">Timestamp</a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["ActionSortParm"]" asp-route-pageNumber="@Model.Logs.PageIndex" asp-route-pageSize="@Model.Logs.PageSize" asp-route-searchString="@Model.Filter.SearchString" asp-route-entityName="@Model.Filter.EntityName" asp-route-startDate="@(Model.Filter.StartDate?.ToString("yyyy-MM-dd"))" asp-route-endDate="@(Model.Filter.EndDate?.ToString("yyyy-MM-dd"))">Action</a>
                        </th>
                        <th>Entity Name</th>
                        <th>Details</th>
                        <th>Username</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.Logs)
                    {
                        <tr>
                            <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                            <td>@log.Action</td>
                            <td>@log.EntityName</td>
                            <td>@log.Details</td>
                            <td>@log.Username</td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.Logs.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Logs.PageIndex - 1, pageSize = Model.Logs.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString, entityName = Model.Filter.EntityName, startDate = Model.Filter.StartDate?.ToString("yyyy-MM-dd"), endDate = Model.Filter.EndDate?.ToString("yyyy-MM-dd") })">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.Logs.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Logs.PageIndex ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.Logs.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString, entityName = Model.Filter.EntityName, startDate = Model.Filter.StartDate?.ToString("yyyy-MM-dd"), endDate = Model.Filter.EndDate?.ToString("yyyy-MM-dd") })">@i</a>
                        </li>
                    }
                    @if (Model.Logs.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Logs.PageIndex + 1, pageSize = Model.Logs.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString, entityName = Model.Filter.EntityName, startDate = Model.Filter.StartDate?.ToString("yyyy-MM-dd"), endDate = Model.Filter.EndDate?.ToString("yyyy-MM-dd") })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>