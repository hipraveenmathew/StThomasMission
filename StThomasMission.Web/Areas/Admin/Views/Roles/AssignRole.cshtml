@model StThomasMission.Web.Areas.Admin.Models.AssignRoleViewModel

@{
    ViewData["Title"] = "Assign Role";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0"><i class="fas fa-user-plus me-2"></i>Assign Role to @Model.FullName</h3>
        </div>
        <div class="card-body">
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="AssignRole" method="post" id="assignRoleForm">
                <input type="hidden" asp-for="UserId" />
                <input type="hidden" asp-for="Email" />
                <input type="hidden" asp-for="FullName" />

                <div class="row">
                    <div class="col-12 col-md-6 mb-3">
                        <label class="form-label fw-bold">Current Roles</label>
                        @if (Model.CurrentRoles.Any())
                        {
                            <ul class="list-group mb-3">
                                @foreach (var role in Model.CurrentRoles)
                                {
                                    <li class="list-group-item d-flex align-items-center">
                                        <span class="badge bg-secondary me-2">@role</span>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No roles assigned.</p>
                        }
                    </div>
                    <div class="col-12 col-md-6 mb-3">
                        <label asp-for="SelectedRole" class="form-label fw-bold"></label>
                        <select asp-for="SelectedRole" class="form-select" asp-items="@(new SelectList(Model.AvailableRoles))" required>
                            <option value="">-- Select a role --</option>
                        </select>
                        <span asp-validation-for="SelectedRole" class="text-danger"></span>
                    </div>
                </div>

                <div class="d-flex justify-content-end mt-4">
                    <a asp-action="Index" asp-area="Admin" class="btn btn-secondary me-2"><i class="fas fa-times me-2"></i>Cancel</a>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-save me-2"></i>Assign Role</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast Notification Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="assignRoleToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Role Assignment</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize jQuery Validate
            $("#assignRoleForm").validate({
                rules: {
                    SelectedRole: {
                        required: true
                    }
                },
                messages: {
                    SelectedRole: {
                        required: "Please select a role to assign."
                    }
                },
                errorElement: "div",
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                }
            });

            // Loading spinner for form submission
            $("#assignRoleForm").on("submit", function () {
                var $submitButton = $(this).find('button[type="submit"]');
                if ($(this).valid()) {
                    $submitButton.prop("disabled", true).prepend('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>');
                }
            });
        });
    </script>
}