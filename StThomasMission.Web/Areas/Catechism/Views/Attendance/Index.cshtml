@model StThomasMission.Web.Models.PaginatedList<StThomasMission.Core.Entities.Attendance>

@{
    ViewData["Title"] = "Attendance Records";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0"><i class="fas fa-clipboard-check me-2"></i>Attendance Records</h3>
        </div>
        <div class="card-body">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Index" asp-area="Catechism" method="get" class="mb-4" id="filterForm">
                <div class="row g-3">
                    <div class="col-12 col-md-4">
                        <label for="grade" class="form-label fw-bold">Grade</label>
                        <input type="text" name="grade" id="grade" class="form-control" value="@ViewData["Grade"]" placeholder="e.g., Year 1" required />
                        <div class="invalid-feedback">Please enter a grade.</div>
                    </div>
                    <div class="col-12 col-md-4">
                        <label for="date" class="form-label fw-bold">Date</label>
                        <input type="date" name="date" id="date" class="form-control" value="@ViewData["Date"]" required />
                        <div class="invalid-feedback">Please select a date.</div>
                    </div>
                    <div class="col-12 col-md-4 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100"><i class="fas fa-filter me-2"></i>Filter</button>
                    </div>
                </div>
            </form>

            @if (Model.Count == 0)
            {
                <div class="alert alert-info text-center" role="alert">
                    No attendance records found.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Student</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attendance in Model)
                            {
                                <tr>
                                    <td>
                                        @(attendance.Student?.FamilyMember != null
                                            ? $"{attendance.Student.FamilyMember.FirstName} {attendance.Student.FamilyMember.LastName}"
                                            : "N/A")
                                    </td>
                                    <td>@attendance.Date.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <span class="badge @(attendance.Status == StThomasMission.Core.Enums.AttendanceStatus.Present ? "bg-success" : "bg-danger")">
                                            @attendance.Status
                                        </span>
                                    </td>
                                    <td>@(string.IsNullOrEmpty(attendance.Description) ? "N/A" : attendance.Description)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize, grade = ViewData["Grade"], date = ViewData["Date"] })"><i class="fas fa-chevron-left"></i> Previous</a>
                            </li>
                        }
                        @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize, grade = ViewData["Grade"], date = ViewData["Date"] })">@i</a>
                            </li>
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize, grade = ViewData["Grade"], date = ViewData["Date"] })">Next <i class="fas fa-chevron-right"></i></a>
                            </li>
                        }
                    </ul>
                    <div class="text-center mt-2">
                        <small>Showing @(Model.PageIndex * Model.PageSize - Model.PageSize + 1)-@(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalItems)) of @Model.TotalItems records</small>
                    </div>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize jQuery Validate for filter form
            $("#filterForm").validate({
                rules: {
                    grade: {
                        required: true,
                        maxlength: 50
                    },
                    date: {
                        required: true,
                        date: true
                    }
                },
                messages: {
                    grade: {
                        required: "Please enter a grade.",
                        maxlength: "Grade cannot exceed 50 characters."
                    },
                    date: {
                        required: "Please select a date.",
                        date: "Please enter a valid date."
                    }
                },
                errorElement: "div",
                errorClass: "invalid-feedback",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                }
            });

            // Loading spinner for form submission
            $("#filterForm").on("submit", function () {
                var $submitButton = $(this).find('button[type="submit"]');
                if ($(this).valid()) {
                    $submitButton.prop("disabled", true).prepend('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>');
                }
            });
        });
    </script>
}