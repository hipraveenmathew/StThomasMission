@using StThomasMission.Core.Enums
@model StThomasMission.Web.Models.PaginatedList<StThomasMission.Core.Entities.Student>
@{
    ViewData["Title"] = "Attendance Summary Report";
}

<div class="card">
    <div class="card-header">
        <h3 class="mb-0">Attendance Summary Report</h3>
    </div>
    <div class="card-body">
        <form asp-action="Report" method="get" class="mb-4">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="grade" class="form-label">Grade</label>
                        <input type="text" name="grade" class="form-control" value="@ViewData["Grade"]" placeholder="e.g., Year 1" required />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="academicYear" class="form-label">Academic Year</label>
                        <input type="number" name="academicYear" class="form-control" value="@ViewData["Year"]" required />
                    </div>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-modern w-100">Generate Report</button>
                </div>
            </div>
        </form>

        @if (Model.Count == 0)
        {
            <p>No students found for this report.</p>
        }
        else
        {
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Student</th>
                        <th>Present Days</th>
                        <th>Absent Days</th>
                        <th>Total Days</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model)
                    {
                        var presentDays = student.Attendances.Count(a => a.Status == AttendanceStatus.Present);
                        var absentDays = student.Attendances.Count(a => a.Status == AttendanceStatus.Absent);
                        var totalDays = presentDays + absentDays;
                        <tr>
                            <td>@(student.FamilyMember?.FirstName ?? "N/A") @(student.FamilyMember?.LastName ?? "N/A")</td>
                            <td>@presentDays</td>
                            <td>@absentDays</td>
                            <td>@totalDays</td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Report", new { pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize, grade = ViewData["Grade"], academicYear = ViewData["Year"] })">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Report", new { pageNumber = i, pageSize = Model.PageSize, grade = ViewData["Grade"], academicYear = ViewData["Year"] })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Report", new { pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize, grade = ViewData["Grade"], academicYear = ViewData["Year"] })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>