@using StThomasMission.Core.Enums
@model StThomasMission.Web.Models.PaginatedList<StThomasMission.Core.Entities.Student>

@{
    ViewData["Title"] = "Students";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0"><i class="fas fa-users me-2"></i>Students</h3>
        </div>
        <div class="card-body">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Index" asp-area="Catechism" method="get" id="searchForm">
                <div class="row g-3 mb-4">
                    <div class="col-12 col-md-4">
                        <label for="searchString" class="form-label fw-bold">Search</label>
                        <input type="text" name="searchString" id="searchString" class="form-control" value="@ViewData["SearchString"]" placeholder="Search by name or grade" />
                    </div>
                    <div class="col-12 col-md-4 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100"><i class="fas fa-search me-2"></i>Search</button>
                    </div>
                </div>
            </form>

            @if (Model.Count == 0)
            {
                <div class="alert alert-info text-center" role="alert">
                    No students found.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-pageNumber="@Model.PageIndex" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@ViewData["SearchString"]" class="text-decoration-none">Name <i class="fas fa-sort"></i></a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["GradeSortParm"]" asp-route-pageNumber="@Model.PageIndex" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@ViewData["SearchString"]" class="text-decoration-none">Grade <i class="fas fa-sort"></i></a>
                                </th>
                                <th>Group ID</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model)
                            {
                                <tr>
                                    <td>
                                        @(student.FamilyMember != null
                                            ? $"{student.FamilyMember.FirstName} {student.FamilyMember.LastName}"
                                            : "N/A")
                                    </td>
                                    <td>@student.Grade</td>
                                    <td>@(student.GroupId != 0 ? student.GroupId.ToString() : "N/A")</td>
                                    <td>
                                        <span class="badge @(student.Status == StudentStatus.Active ? "bg-success" : "bg-secondary")">
                                            @student.Status
                                        </span>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-wrap gap-2">
                                            <a asp-action="Details" asp-route-id="@student.Id" asp-area="Catechism" class="btn btn-sm btn-info">
                                                <i class="fas fa-info-circle me-2"></i>Details
                                            </a>
                                            <a asp-action="MarkAttendance" asp-route-grade="@student.Grade" asp-area="Catechism" class="btn btn-sm btn-primary">
                                                <i class="fas fa-calendar-check me-2"></i>Attendance
                                            </a>
                                            <a asp-action="AddAssessment" asp-route-id="@student.Id" asp-area="Catechism" class="btn btn-sm btn-primary">
                                                <i class="fas fa-plus me-2"></i>Assessment
                                            </a>
                                            <a asp-action="MarkPassFail" asp-route-id="@student.Id" asp-area="Catechism" class="btn btn-sm btn-primary">
                                                <i class="fas fa-check-circle me-2"></i>Pass/Fail
                                            </a>
                                            <a asp-action="AddGroupActivity" asp-route-grade="@student.Grade" asp-area="Catechism" class="btn btn-sm btn-primary">
                                                <i class="fas fa-users me-2"></i>Group Activity
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@student.Id" asp-area="Catechism" class="btn btn-sm btn-warning">
                                                <i class="fas fa-edit me-2"></i>Edit
                                            </a>
                                            <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@student.Id">
                                                <i class="fas fa-trash me-2"></i>Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize, sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"] })"><i class="fas fa-chevron-left"></i> Previous</a>
                            </li>
                        }
                        @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize, sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"] })">@i</a>
                            </li>
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize, sortOrder = ViewData["CurrentSort"], searchString = ViewData["SearchString"] })">Next <i class="fas fa-chevron-right"></i></a>
                            </li>
                        }
                    </ul>
                    <div class="text-center mt-2">
                        <small>Showing @(Model.PageIndex * Model.PageSize - Model.PageSize + 1)-@(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalItems)) of @Model.TotalItems students</small>
                    </div>
                </nav>
            }
        </div>
    </div>
</div>

<!-- Delete Modals -->
@foreach (var student in Model)
{
    <div class="modal fade" id="deleteModal-@student.Id" tabindex="-1" aria-labelledby="deleteModalLabel-@student.Id" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel-@student.Id"><i class="fas fa-trash me-2"></i>Delete Student</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the student "<strong>@(student.FamilyMember != null ? $"{student.FamilyMember.FirstName} {student.FamilyMember.LastName}" : "N/A")</strong>"?
                </div>
                <form asp-action="Delete" asp-route-id="@student.Id" asp-area="Catechism" method="post">
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fas fa-times me-2"></i>Cancel</button>
                        <button type="submit" class="btn btn-danger"><i class="fas fa-trash me-2"></i>Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize jQuery Validate for search form
            $("#searchForm").validate({
                rules: {
                    searchString: {
                        maxlength: 100
                    }
                },
                messages: {
                    searchString: {
                        maxlength: "Search term cannot exceed 100 characters."
                    }
                },
                errorElement: "div",
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                }
            });

            // Loading spinner for form submission
            $("#searchForm").on("submit", function () {
                var $submitButton = $(this).find('button[type="submit"]');
                if ($(this).valid()) {
                    $submitButton.prop("disabled", true).prepend('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>');
                }
            });
        });
    </script>
}