@model StThomasMission.Web.Areas.Families.Models.MessageHistoryIndexViewModel

@{
    ViewData["Title"] = "Message History";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0"><i class="fas fa-envelope me-2"></i>Message History</h3>
        </div>
        <div class="card-body">
            <form asp-action="Index" asp-area="Families" method="get" id="filterForm" class="mb-4">
                <div class="row g-3">
                    <div class="col-12 col-md-4">
                        <label asp-for="Filter.SearchString" class="form-label fw-bold">Search</label>
                        <input asp-for="Filter.SearchString" class="form-control" placeholder="Search by recipient or message" />
                    </div>
                    <div class="col-12 col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100"><i class="fas fa-search me-2"></i>Search</button>
                    </div>
                </div>
            </form>

            @if (Model.Messages.Count == 0)
            {
                <div class="alert alert-info text-center" role="alert">
                    No messages found.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-pageNumber="@Model.Messages.PageIndex" asp-route-pageSize="@Model.Messages.PageSize" asp-route-searchString="@Model.Filter.SearchString" class="text-decoration-none">Sent At <i class="fas fa-sort"></i></a>
                                </th>
                                <th>Recipient</th>
                                <th>Message</th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["MethodSortParm"]" asp-route-pageNumber="@Model.Messages.PageIndex" asp-route-pageSize="@Model.Messages.PageSize" asp-route-searchString="@Model.Filter.SearchString" class="text-decoration-none">Method <i class="fas fa-sort"></i></a>
                                </th>
                                <th>Status</th>
                                <th>Response Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var message in Model.Messages)
                            {
                                <tr>
                                    <td>@(message.SentAt != default ? message.SentAt.ToString("yyyy-MM-dd HH:mm:ss") : "N/A")</td>
                                    <td>@(string.IsNullOrEmpty(message.Recipient) ? "N/A" : message.Recipient)</td>
                                    <td>@(string.IsNullOrEmpty(message.Message) ? "N/A" : message.Message)</td>
                                    <td>@message.Method.ToString()</td>
                                    <td>@(string.IsNullOrEmpty(message.Status) ? "N/A" : message.Status)</td>
                                    <td>@(string.IsNullOrEmpty(message.ResponseDetails) ? "N/A" : message.ResponseDetails)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.Messages.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Messages.PageIndex - 1, pageSize = Model.Messages.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString })"><i class="fas fa-chevron-left"></i> Previous</a>
                            </li>
                        }
                        @for (int i = Math.Max(1, Model.Messages.PageIndex - 2); i <= Math.Min(Model.Messages.TotalPages, Model.Messages.PageIndex + 2); i++)
                        {
                            <li class="page-item @(i == Model.Messages.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.Messages.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString })">@i</a>
                            </li>
                        }
                        @if (Model.Messages.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Messages.PageIndex + 1, pageSize = Model.Messages.PageSize, sortOrder = ViewData["CurrentSort"], searchString = Model.Filter.SearchString })">Next <i class="fas fa-chevron-right"></i></a>
                            </li>
                        }
                    </ul>
                    <div class="text-center mt-2">
                        <small>Showing @(Model.Messages.PageIndex * Model.Messages.PageSize - Model.Messages.PageSize + 1)-@(Math.Min(Model.Messages.PageIndex * Model.Messages.PageSize, Model.Messages.TotalItems)) of @Model.Messages.TotalItems messages</small>
                    </div>
                </nav>
            }
        </div>
    </div>
</div>

<!-- Toast Notification Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="messageHistoryToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Message History Status</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize jQuery Validate for filter form
            $("#filterForm").validate({
                rules: {
                    "Filter.SearchString": {
                        maxlength: 100
                    }
                },
                messages: {
                    "Filter.SearchString": {
                        maxlength: "Search term cannot exceed 100 characters."
                    }
                },
                errorElement: "div",
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                }
            });

            // Loading spinner for form submission
            $("#filterForm").on("submit", function () {
                var $submitButton = $(this).find('button[type="submit"]');
                if ($(this).valid()) {
                    $submitButton.prop("disabled", true).prepend('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>');
                }
            });
        });
    </script>
}